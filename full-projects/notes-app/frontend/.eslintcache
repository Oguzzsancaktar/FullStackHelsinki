[{"/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/index.js":"1","/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/App.js":"2","/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/components/Note.js":"3","/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/components/Footer.js":"4","/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/components/Notification.js":"5","/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/services/notes.js":"6","/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/services/login.js":"7"},{"size":139,"mtime":1639056875847,"results":"8","hashOfConfig":"9"},{"size":3471,"mtime":1639074595393,"results":"10","hashOfConfig":"9"},{"size":305,"mtime":1639056875843,"results":"11","hashOfConfig":"9"},{"size":319,"mtime":1639056875842,"results":"12","hashOfConfig":"9"},{"size":214,"mtime":1639056875845,"results":"13","hashOfConfig":"9"},{"size":490,"mtime":1639057916415,"results":"14","hashOfConfig":"9"},{"size":199,"mtime":1639073644100,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ev4lr8",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/index.js",[],["34","35"],"/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/App.js",["36"],"import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n\n  \n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })    \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({username , password})\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (error) {\n      setErrorMessage(error)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000);\n    }\n    console.log('logging in with', username, password)\n  }\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n      <Footer />\n    </div>\n  )\n}\n\nexport default App","/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/components/Note.js",[],["37","38"],"/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/components/Footer.js",[],"/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/components/Notification.js",[],"/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/services/notes.js",["39"],"import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll, create, update\n}","/Users/oguzsancaktar/Projects/FullstackHelsinki/full-projects/notes-app/frontend/src/services/login.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":16,"column":10,"nodeType":"46","messageId":"47","endLine":16,"endColumn":14},{"ruleId":"40","replacedBy":"48"},{"ruleId":"42","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":19,"column":1,"nodeType":"52","endLine":21,"endColumn":2},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["53"],["54"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]